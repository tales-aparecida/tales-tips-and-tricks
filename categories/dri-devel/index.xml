<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DRI-Devel on Tales Tips and Tricks</title><link>https://tales-aparecida.github.io/tales-tips-and-tricks/categories/dri-devel/</link><description>Recent content in DRI-Devel on Tales Tips and Tricks</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 12 Jun 2022 12:00:00 -0300</lastBuildDate><atom:link href="https://tales-aparecida.github.io/tales-tips-and-tricks/categories/dri-devel/index.xml" rel="self" type="application/rss+xml"/><item><title>Finding bugs using IGT and git bisect</title><link>https://tales-aparecida.github.io/tales-tips-and-tricks/posts/dri-devel/gsoc-report-2/</link><pubDate>Sun, 12 Jun 2022 12:00:00 -0300</pubDate><guid>https://tales-aparecida.github.io/tales-tips-and-tricks/posts/dri-devel/gsoc-report-2/</guid><description>The first step to eliminate bugs is to find a way how to reproduce them consistently. Wait&amp;hellip; what?
Test suites are great for that, since they can simulate very specific behavior in a timely manner. IGT GPU Tools is a collection of tools for development and testing of the DRM drivers, and, as such, it can help us to find and reproduce bugs.
I intend to help expand the AMDGPU tests&amp;rsquo; list in my the GSoC project, so it made sense trying to run them right away.</description></item><item><title>My experience as a Google Summer of Code Contributor - Introduction</title><link>https://tales-aparecida.github.io/tales-tips-and-tricks/posts/dri-devel/gsoc-report-1/</link><pubDate>Mon, 06 Jun 2022 12:00:00 -0300</pubDate><guid>https://tales-aparecida.github.io/tales-tips-and-tricks/posts/dri-devel/gsoc-report-1/</guid><description>So it begins!
With some pushes and pulls from friends, I&amp;rsquo;ve been studying the Linux Graphical stack for some time now. After some minor patches to both Mesa and the Linux Kernel, I followed the instructions thoroughly and landed a successful Google Summer of Code proposal:
Introduce Unit Tests to the AMDGPU “DCE” Component My project’s primary goal is to create unit tests using KUnit for the AMDGPU driver focused on the Display and Compositing Engine (DCE) 11.</description></item></channel></rss>